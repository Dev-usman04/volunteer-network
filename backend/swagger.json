{
  "openapi": "3.0.0",
  "info": {
    "title": "Volunteer Network API",
    "description": "A comprehensive API for connecting volunteers with organizations that need help",
    "version": "1.0.0",
    "contact": {
      "name": "Volunteer Network Support",
      "email": "support@volunteernetwork.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Development server"
    },
    {
      "url": "https://api.volunteernetwork.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from login or register endpoints"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the user"
          },
          "name": {
            "type": "string",
            "description": "User's full name",
            "minLength": 2,
            "maxLength": 50
          },
          
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "role": {
            "type": "string",
            "enum": ["volunteer", "organization"],
            "description": "User's role in the system"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "minLength": 2,
            "maxLength": 100
          },
          "bio": {
            "type": "string",
            "description": "User's biography",
            "maxLength": 500
          },
          "profileImage": {
            "type": "string",
            "description": "URL to user's profile image"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["name", "email", "role", "location"]
      },
      "Opportunity": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the opportunity"
          },
          "title": {
            "type": "string",
            "description": "Title of the opportunity",
            "minLength": 5,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the opportunity",
            "minLength": 10,
            "maxLength": 1000
          },
          "location": {
            "type": "string",
            "description": "Location where the opportunity takes place",
            "minLength": 2,
            "maxLength": 100
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of the opportunity"
          },
          "category": {
            "type": "string",
            "enum": ["education", "healthcare", "environment", "community", "animals", "other"],
            "description": "Category of the opportunity"
          },
          "duration": {
            "type": "string",
            "enum": ["1-2 hours", "3-5 hours", "6-8 hours", "Full day", "Multiple days"],
            "description": "Expected duration of the opportunity"
          },
          "maxVolunteers": {
            "type": "integer",
            "minimum": 1,
            "description": "Maximum number of volunteers needed"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the opportunity is currently active",
            "default": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "volunteersApplied": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "List of volunteers who have applied"
          },
          "isFull": {
            "type": "boolean",
            "description": "Whether the opportunity has reached maximum volunteers"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["title", "description", "location", "date", "category", "duration"]
      },
      "Application": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the application"
          },
          "volunteerId": {
            "$ref": "#/components/schemas/User"
          },
          "opportunityId": {
            "$ref": "#/components/schemas/Opportunity"
          },
          "message": {
            "type": "string",
            "description": "Volunteer's message with the application",
            "maxLength": 500
          },
          "status": {
            "type": "string",
            "enum": ["pending", "accepted", "rejected"],
            "description": "Status of the application",
            "default": "pending"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reviewedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reviewMessage": {
            "type": "string",
            "description": "Organization's review message",
            "maxLength": 300
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["volunteerId", "opportunityId"]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "Current page number"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages"
          },
          "totalDocs": {
            "type": "integer",
            "description": "Total number of documents"
          },
          "hasNextPage": {
            "type": "boolean",
            "description": "Whether there is a next page"
          },
          "hasPrevPage": {
            "type": "boolean",
            "description": "Whether there is a previous page"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Field name that caused the error"
                },
                "message": {
                  "type": "string",
                  "description": "Specific error message for the field"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Check if the API is running",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "API is running",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Volunteer Network API is running!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register User",
        "description": "Register a new volunteer or organization",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's full name",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "minLength": 6
                  },
                  "role": {
                    "type": "string",
                    "enum": ["volunteer", "organization"],
                    "description": "User's role"
                  },
                  "location": {
                    "type": "string",
                    "description": "User's location",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "bio": {
                    "type": "string",
                    "description": "User's biography",
                    "maxLength": 500
                  }
                },
                "required": ["name", "email", "password", "role", "location"]
              },
              "examples": {
                "volunteer": {
                  "summary": "Volunteer Registration",
                  "value": {
                    "name": "John Doe",
                    "email": "john@example.com",
                    "password": "password123",
                    "role": "volunteer",
                    "location": "New York, NY",
                    "bio": "Passionate volunteer looking to help the community"
                  }
                },
                "organization": {
                  "summary": "Organization Registration",
                  "value": {
                    "name": "Community Help Center",
                    "email": "help@community.org",
                    "password": "password123",
                    "role": "organization",
                    "location": "New York, NY",
                    "bio": "Non-profit organization dedicated to community service"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token for authentication"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login User",
        "description": "Login with email and password",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                },
                "required": ["email", "password"]
              },
              "example": {
                "email": "john@example.com",
                "password": "password123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token for authentication"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "summary": "Get User Profile",
        "description": "Get current user's profile",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Profile",
        "description": "Update current user's profile",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's full name",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "location": {
                    "type": "string",
                    "description": "User's location",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "bio": {
                    "type": "string",
                    "description": "User's biography",
                    "maxLength": 500
                  }
                }
              },
              "example": {
                "name": "John Smith",
                "location": "Los Angeles, CA",
                "bio": "Updated bio"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/opportunities": {
      "get": {
        "summary": "Get All Opportunities",
        "description": "Get all active opportunities with optional filtering and pagination",
        "tags": ["Opportunities"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Filter by location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category",
            "schema": {
              "type": "string",
              "enum": ["education", "healthcare", "environment", "community", "animals", "other"]
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filter by date (opportunities after this date)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in title and description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "opportunities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opportunity"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Opportunity",
        "description": "Create a new volunteer opportunity (organizations only)",
        "tags": ["Opportunities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the opportunity",
                    "minLength": 5,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the opportunity",
                    "minLength": 10,
                    "maxLength": 1000
                  },
                  "location": {
                    "type": "string",
                    "description": "Location where the opportunity takes place",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the opportunity"
                  },
                  "category": {
                    "type": "string",
                    "enum": ["education", "healthcare", "environment", "community", "animals", "other"],
                    "description": "Category of the opportunity"
                  },
                  "duration": {
                    "type": "string",
                    "enum": ["1-2 hours", "3-5 hours", "6-8 hours", "Full day", "Multiple days"],
                    "description": "Expected duration of the opportunity"
                  },
                  "maxVolunteers": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Maximum number of volunteers needed"
                  }
                },
                "required": ["title", "description", "location", "date", "category", "duration"]
              },
              "example": {
                "title": "Help at Local Food Bank",
                "description": "We need volunteers to help sort and distribute food to families in need.",
                "location": "New York, NY",
                "date": "2024-02-15T10:00:00.000Z",
                "category": "community",
                "duration": "3-5 hours",
                "maxVolunteers": 10
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Opportunity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Opportunity created successfully"
                    },
                    "opportunity": {
                      "$ref": "#/components/schemas/Opportunity"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Organization role required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/opportunities/{id}": {
      "get": {
        "summary": "Get Opportunity",
        "description": "Get details of a specific opportunity",
        "tags": ["Opportunities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Opportunity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunity retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "opportunity": {
                      "$ref": "#/components/schemas/Opportunity"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Opportunity",
        "description": "Update an existing opportunity (organization owner only)",
        "tags": ["Opportunities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Opportunity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the opportunity",
                    "minLength": 5,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the opportunity",
                    "minLength": 10,
                    "maxLength": 1000
                  },
                  "location": {
                    "type": "string",
                    "description": "Location where the opportunity takes place",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the opportunity"
                  },
                  "category": {
                    "type": "string",
                    "enum": ["education", "healthcare", "environment", "community", "animals", "other"],
                    "description": "Category of the opportunity"
                  },
                  "duration": {
                    "type": "string",
                    "enum": ["1-2 hours", "3-5 hours", "6-8 hours", "Full day", "Multiple days"],
                    "description": "Expected duration of the opportunity"
                  },
                  "maxVolunteers": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Maximum number of volunteers needed"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether the opportunity is currently active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opportunity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Opportunity updated successfully"
                    },
                    "opportunity": {
                      "$ref": "#/components/schemas/Opportunity"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Opportunity",
        "description": "Delete an opportunity and all related applications (organization owner only)",
        "tags": ["Opportunities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Opportunity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunity deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Opportunity deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/opportunities/my/list": {
      "get": {
        "summary": "Get Organization's Opportunities",
        "description": "Get all opportunities created by the logged-in organization",
        "tags": ["Opportunities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "opportunities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opportunity"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Organization role required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/opportunities/{id}/apply": {
      "post": {
        "summary": "Apply to Opportunity",
        "description": "Apply to a volunteer opportunity (volunteers only)",
        "tags": ["Opportunities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Opportunity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Volunteer's message with the application",
                    "maxLength": 500
                  }
                }
              },
              "example": {
                "message": "I would love to help with this opportunity!"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Application submitted successfully"
                    },
                    "application": {
                      "$ref": "#/components/schemas/Application"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Already applied or opportunity full",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Volunteer role required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/applications/my": {
      "get": {
        "summary": "Get Volunteer's Applications",
        "description": "Get all applications submitted by the logged-in volunteer",
        "tags": ["Applications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["pending", "accepted", "rejected"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Applications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Application"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Volunteer role required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/withdraw": {
      "delete": {
        "summary": "Withdraw Application",
        "description": "Withdraw an application (volunteer owner only, only if status is pending)",
        "tags": ["Applications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Application ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application withdrawn successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Application withdrawn successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot withdraw reviewed application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/applications/opportunity/{opportunityId}": {
      "get": {
        "summary": "Get Opportunity Applications",
        "description": "Get all applications for a specific opportunity (organization owner only)",
        "tags": ["Applications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "required": true,
            "description": "Opportunity ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["pending", "accepted", "rejected"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Applications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Application"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the opportunity owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/review": {
      "put": {
        "summary": "Review Application",
        "description": "Review and accept/reject an application (organization owner only)",
        "tags": ["Applications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Application ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["accepted", "rejected"],
                    "description": "New status for the application"
                  },
                  "reviewMessage": {
                    "type": "string",
                    "description": "Organization's review message",
                    "maxLength": 300
                  }
                },
                "required": ["status"]
              },
              "examples": {
                "accept": {
                  "summary": "Accept Application",
                  "value": {
                    "status": "accepted",
                    "reviewMessage": "Thank you for your application! We'd love to have you join us."
                  }
                },
                "reject": {
                  "summary": "Reject Application",
                  "value": {
                    "status": "rejected",
                    "reviewMessage": "Thank you for your interest, but we have selected other candidates."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application reviewed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Application reviewed successfully"
                    },
                    "application": {
                      "$ref": "#/components/schemas/Application"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the opportunity owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/applications/opportunity/{opportunityId}/stats": {
      "get": {
        "summary": "Get Application Statistics",
        "description": "Get statistics for applications to a specific opportunity (organization owner only)",
        "tags": ["Applications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "required": true,
            "description": "Opportunity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of applications"
                        },
                        "pending": {
                          "type": "integer",
                          "description": "Number of pending applications"
                        },
                        "accepted": {
                          "type": "integer",
                          "description": "Number of accepted applications"
                        },
                        "rejected": {
                          "type": "integer",
                          "description": "Number of rejected applications"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "stats": {
                    "total": 5,
                    "pending": 3,
                    "accepted": 1,
                    "rejected": 1
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the opportunity owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication and profile management"
    },
    {
      "name": "Opportunities",
      "description": "Volunteer opportunity management"
    },
    {
      "name": "Applications",
      "description": "Volunteer application management"
    }
  ]
} 